#version {{ VERSION }}

{{ LOCATION 0 BINDING 0 RATE_VERTEX OFFSET TIGHTLY_PACKED }} in vec3 a_pos;
{{ LOCATION 1 BINDING 0 RATE_VERTEX OFFSET TIGHTLY_PACKED }} in vec3 a_normal;

{{ LOCATION 0 }} out vec3 norm;

{{ SET_BINDING 0 1 BUFFER_LABEL GLOBAL }} uniform CameraVP {
    mat4 vp;
} camera_vp;

{{ SET_BINDING 0 2 BUFFER_LABEL GLOBAL }} uniform LightPosition {
    vec4 position;
} light_position;

void main(){
    norm = a_normal;
    gl_Position = camera_vp.vp * (vec4(a_pos, 1.0) + light_position.position);
}
