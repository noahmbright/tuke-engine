#version {{ VERSION }}

{{ LOCATION 0 }} in vec3 norm;
{{ LOCATION 1 }} in vec2 uv;
{{ LOCATION 2 }} in vec3 frag_pos;

{{ LOCATION 0 }} out vec4 FragColor;

{{ SET_BINDING 0 1 BUFFER_LABEL GLOBAL }} uniform LightPosition {
    vec4 position;
} light_position;

void main(){
    vec3 base_color = vec3(0.8, 0.5, 0.3);
    vec3 light_color = vec3(1.0, 1.0, 1.0);
    vec3 light_direction = normalize(vec3(light_position.position) - frag_pos);

    float dot_product = max(dot(norm, light_direction), 0.0);
    vec3 diffuse_color = dot_product * light_color;

    vec3 directional_light_direction = vec3(0.0, .707, .707);
    vec3 directional_light_color = vec3(0.8, 0.0, 0.1);
    float directional_dot_product = max(dot(norm, directional_light_direction), 0.0);
    vec3 directional_color = directional_dot_product * directional_light_color;

    vec3 total_color = base_color * (diffuse_color + directional_color);
    FragColor = vec4(total_color, 1.0);
}
